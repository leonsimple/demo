// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common_robot.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace webwx {

  /// <summary>Holder for reflection information generated from common_robot.proto</summary>
  public static partial class CommonRobotReflection {

    #region Descriptor
    /// <summary>File descriptor for common_robot.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonRobotReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJjb21tb25fcm9ib3QucHJvdG8SBXdlYnd4Io8BCgdDaGF0TXNnEg4KBnRh",
            "bGtlchgBIAEoCRIPCgdjb250ZW50GAIgASgJEg8KB21zZ1R5cGUYAyABKAUS",
            "EgoKdGhJbWdWaWRlbxgEIAEoCRISCgpjcmVhdGVUaW1lGAUgASgDEhUKDXNl",
            "ckhhbmRsZVRpbWUYBiABKAMSEwoLdmlkZW9sZW5ndGgYByABKAUiPAoISWRl",
            "bnRpdHkSEgoKY2xpZW50SW1laRgBIAEoCRIMCgR3eElEGAIgASgJEg4KBnNo",
            "b3BJZBgDIAEoBSIwCgZSZXN1bHQSCwoDY21kGAEgASgFEgwKBGNvZGUYAiAB",
            "KAUSCwoDbXNnGAMgASgJIjsKCU9wZXJhdGlvbhILCgNjbWQYASABKAUSDAoE",
            "ZGF0YRgCIAEoCRITCgtyZWNlaXZlV3hJZBgDIAEoCUIIqgIFd2Vid3hiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::webwx.ChatMsg), global::webwx.ChatMsg.Parser, new[]{ "Talker", "Content", "MsgType", "ThImgVideo", "CreateTime", "SerHandleTime", "Videolength" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::webwx.Identity), global::webwx.Identity.Parser, new[]{ "ClientImei", "WxID", "ShopId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::webwx.Result), global::webwx.Result.Parser, new[]{ "Cmd", "Code", "Msg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::webwx.Operation), global::webwx.Operation.Parser, new[]{ "Cmd", "Data", "ReceiveWxId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///消息实体
  /// </summary>
  public sealed partial class ChatMsg : pb::IMessage<ChatMsg> {
    private static readonly pb::MessageParser<ChatMsg> _parser = new pb::MessageParser<ChatMsg>(() => new ChatMsg());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::webwx.CommonRobotReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMsg(ChatMsg other) : this() {
      talker_ = other.talker_;
      content_ = other.content_;
      msgType_ = other.msgType_;
      thImgVideo_ = other.thImgVideo_;
      createTime_ = other.createTime_;
      serHandleTime_ = other.serHandleTime_;
      videolength_ = other.videolength_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMsg Clone() {
      return new ChatMsg(this);
    }

    /// <summary>Field number for the "talker" field.</summary>
    public const int TalkerFieldNumber = 1;
    private string talker_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Talker {
      get { return talker_; }
      set {
        talker_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 2;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "msgType" field.</summary>
    public const int MsgTypeFieldNumber = 3;
    private int msgType_;
    /// <summary>
    ///1:文本消息. 2:图片URL 3：视频URL 4：语音URL 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgType {
      get { return msgType_; }
      set {
        msgType_ = value;
      }
    }

    /// <summary>Field number for the "thImgVideo" field.</summary>
    public const int ThImgVideoFieldNumber = 4;
    private string thImgVideo_ = "";
    /// <summary>
    ///视频压缩图 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ThImgVideo {
      get { return thImgVideo_; }
      set {
        thImgVideo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "createTime" field.</summary>
    public const int CreateTimeFieldNumber = 5;
    private long createTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "serHandleTime" field.</summary>
    public const int SerHandleTimeFieldNumber = 6;
    private long serHandleTime_;
    /// <summary>
    ///服务器处理时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SerHandleTime {
      get { return serHandleTime_; }
      set {
        serHandleTime_ = value;
      }
    }

    /// <summary>Field number for the "videolength" field.</summary>
    public const int VideolengthFieldNumber = 7;
    private int videolength_;
    /// <summary>
    ///视频时长单位秒
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Videolength {
      get { return videolength_; }
      set {
        videolength_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Talker != other.Talker) return false;
      if (Content != other.Content) return false;
      if (MsgType != other.MsgType) return false;
      if (ThImgVideo != other.ThImgVideo) return false;
      if (CreateTime != other.CreateTime) return false;
      if (SerHandleTime != other.SerHandleTime) return false;
      if (Videolength != other.Videolength) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Talker.Length != 0) hash ^= Talker.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (MsgType != 0) hash ^= MsgType.GetHashCode();
      if (ThImgVideo.Length != 0) hash ^= ThImgVideo.GetHashCode();
      if (CreateTime != 0L) hash ^= CreateTime.GetHashCode();
      if (SerHandleTime != 0L) hash ^= SerHandleTime.GetHashCode();
      if (Videolength != 0) hash ^= Videolength.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Talker.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Talker);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Content);
      }
      if (MsgType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MsgType);
      }
      if (ThImgVideo.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ThImgVideo);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(CreateTime);
      }
      if (SerHandleTime != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(SerHandleTime);
      }
      if (Videolength != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Videolength);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Talker.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Talker);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (MsgType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MsgType);
      }
      if (ThImgVideo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ThImgVideo);
      }
      if (CreateTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTime);
      }
      if (SerHandleTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SerHandleTime);
      }
      if (Videolength != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Videolength);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatMsg other) {
      if (other == null) {
        return;
      }
      if (other.Talker.Length != 0) {
        Talker = other.Talker;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.MsgType != 0) {
        MsgType = other.MsgType;
      }
      if (other.ThImgVideo.Length != 0) {
        ThImgVideo = other.ThImgVideo;
      }
      if (other.CreateTime != 0L) {
        CreateTime = other.CreateTime;
      }
      if (other.SerHandleTime != 0L) {
        SerHandleTime = other.SerHandleTime;
      }
      if (other.Videolength != 0) {
        Videolength = other.Videolength;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Talker = input.ReadString();
            break;
          }
          case 18: {
            Content = input.ReadString();
            break;
          }
          case 24: {
            MsgType = input.ReadInt32();
            break;
          }
          case 34: {
            ThImgVideo = input.ReadString();
            break;
          }
          case 40: {
            CreateTime = input.ReadInt64();
            break;
          }
          case 48: {
            SerHandleTime = input.ReadInt64();
            break;
          }
          case 56: {
            Videolength = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Identity : pb::IMessage<Identity> {
    private static readonly pb::MessageParser<Identity> _parser = new pb::MessageParser<Identity>(() => new Identity());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Identity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::webwx.CommonRobotReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Identity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Identity(Identity other) : this() {
      clientImei_ = other.clientImei_;
      wxID_ = other.wxID_;
      shopId_ = other.shopId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Identity Clone() {
      return new Identity(this);
    }

    /// <summary>Field number for the "clientImei" field.</summary>
    public const int ClientImeiFieldNumber = 1;
    private string clientImei_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientImei {
      get { return clientImei_; }
      set {
        clientImei_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "wxID" field.</summary>
    public const int WxIDFieldNumber = 2;
    private string wxID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WxID {
      get { return wxID_; }
      set {
        wxID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "shopId" field.</summary>
    public const int ShopIdFieldNumber = 3;
    private int shopId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ShopId {
      get { return shopId_; }
      set {
        shopId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Identity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Identity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientImei != other.ClientImei) return false;
      if (WxID != other.WxID) return false;
      if (ShopId != other.ShopId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientImei.Length != 0) hash ^= ClientImei.GetHashCode();
      if (WxID.Length != 0) hash ^= WxID.GetHashCode();
      if (ShopId != 0) hash ^= ShopId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientImei.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientImei);
      }
      if (WxID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(WxID);
      }
      if (ShopId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ShopId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientImei.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientImei);
      }
      if (WxID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WxID);
      }
      if (ShopId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShopId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Identity other) {
      if (other == null) {
        return;
      }
      if (other.ClientImei.Length != 0) {
        ClientImei = other.ClientImei;
      }
      if (other.WxID.Length != 0) {
        WxID = other.WxID;
      }
      if (other.ShopId != 0) {
        ShopId = other.ShopId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ClientImei = input.ReadString();
            break;
          }
          case 18: {
            WxID = input.ReadString();
            break;
          }
          case 24: {
            ShopId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Result : pb::IMessage<Result> {
    private static readonly pb::MessageParser<Result> _parser = new pb::MessageParser<Result>(() => new Result());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Result> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::webwx.CommonRobotReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Result() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Result(Result other) : this() {
      cmd_ = other.cmd_;
      code_ = other.code_;
      msg_ = other.msg_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Result Clone() {
      return new Result(this);
    }

    /// <summary>Field number for the "cmd" field.</summary>
    public const int CmdFieldNumber = 1;
    private int cmd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Cmd {
      get { return cmd_; }
      set {
        cmd_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private int code_;
    /// <summary>
    ///0000:处理成功 其它表示异常msg对应异常描述
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 3;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Result);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Result other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cmd != other.Cmd) return false;
      if (Code != other.Code) return false;
      if (Msg != other.Msg) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Cmd != 0) hash ^= Cmd.GetHashCode();
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Cmd != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Cmd);
      }
      if (Code != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Code);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Msg);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Cmd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cmd);
      }
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Result other) {
      if (other == null) {
        return;
      }
      if (other.Cmd != 0) {
        Cmd = other.Cmd;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Cmd = input.ReadInt32();
            break;
          }
          case 16: {
            Code = input.ReadInt32();
            break;
          }
          case 26: {
            Msg = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Operation : pb::IMessage<Operation> {
    private static readonly pb::MessageParser<Operation> _parser = new pb::MessageParser<Operation>(() => new Operation());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Operation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::webwx.CommonRobotReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Operation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Operation(Operation other) : this() {
      cmd_ = other.cmd_;
      data_ = other.data_;
      receiveWxId_ = other.receiveWxId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Operation Clone() {
      return new Operation(this);
    }

    /// <summary>Field number for the "cmd" field.</summary>
    public const int CmdFieldNumber = 1;
    private int cmd_;
    /// <summary>
    ///具体业务指令 如发朋友圈，加好友，点赞等
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Cmd {
      get { return cmd_; }
      set {
        cmd_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private string data_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "receiveWxId" field.</summary>
    public const int ReceiveWxIdFieldNumber = 3;
    private string receiveWxId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReceiveWxId {
      get { return receiveWxId_; }
      set {
        receiveWxId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Operation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Operation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cmd != other.Cmd) return false;
      if (Data != other.Data) return false;
      if (ReceiveWxId != other.ReceiveWxId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Cmd != 0) hash ^= Cmd.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (ReceiveWxId.Length != 0) hash ^= ReceiveWxId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Cmd != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Cmd);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data);
      }
      if (ReceiveWxId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ReceiveWxId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Cmd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cmd);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data);
      }
      if (ReceiveWxId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReceiveWxId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Operation other) {
      if (other == null) {
        return;
      }
      if (other.Cmd != 0) {
        Cmd = other.Cmd;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      if (other.ReceiveWxId.Length != 0) {
        ReceiveWxId = other.ReceiveWxId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Cmd = input.ReadInt32();
            break;
          }
          case 18: {
            Data = input.ReadString();
            break;
          }
          case 26: {
            ReceiveWxId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
